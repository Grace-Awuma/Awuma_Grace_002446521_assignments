/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.Person;
import Model.Address;
import javax.swing.JOptionPane;

/**
 *
 * @author grace
 */
public class CreateHomeAddressPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateHomeAddressPanel
     */
    Person person;
    public CreateHomeAddressPanel(Person p) {
        initComponents();
        person= p;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHomeAddress = new javax.swing.JLabel();
        lblHomeName = new javax.swing.JLabel();
        lblHmCountry = new javax.swing.JLabel();
        lblHomeState = new javax.swing.JLabel();
        lblHmCity = new javax.swing.JLabel();
        lblHmStrt = new javax.swing.JLabel();
        fieldHomeName = new javax.swing.JTextField();
        fieldHomeCountry = new javax.swing.JTextField();
        fieldHomeState = new javax.swing.JTextField();
        fieldHomeCity = new javax.swing.JTextField();
        fieldHomeStreet = new javax.swing.JTextField();
        btbHomeSave = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 153, 153));

        lblHomeAddress.setText("Enter Your Home Address");

        lblHomeName.setText("Name");

        lblHmCountry.setText("Country");

        lblHomeState.setText("State");

        lblHmCity.setText("City");

        lblHmStrt.setText("Street");

        fieldHomeCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldHomeCountryActionPerformed(evt);
            }
        });

        fieldHomeStreet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldHomeStreetActionPerformed(evt);
            }
        });

        btbHomeSave.setText("Save");
        btbHomeSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btbHomeSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(lblHomeAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblHomeName)
                                .addGap(67, 67, 67)
                                .addComponent(fieldHomeName, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                                .addGap(10, 10, 10))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblHmStrt)
                                    .addComponent(lblHmCity))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fieldHomeCity, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                    .addComponent(fieldHomeStreet)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblHomeState)
                                .addGap(81, 81, 81)
                                .addComponent(fieldHomeState))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblHmCountry)
                                .addGap(66, 66, 66)
                                .addComponent(fieldHomeCountry)))))
                .addGap(153, 153, 153))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btbHomeSave)
                .addGap(90, 90, 90))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(lblHomeAddress)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHomeName)
                    .addComponent(fieldHomeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHmCountry)
                    .addComponent(fieldHomeCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHomeState)
                    .addComponent(fieldHomeState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHmCity)
                    .addComponent(fieldHomeCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHmStrt)
                    .addComponent(fieldHomeStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(btbHomeSave)
                .addContainerGap(67, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void fieldHomeCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldHomeCountryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldHomeCountryActionPerformed

    private void fieldHomeStreetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldHomeStreetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldHomeStreetActionPerformed

    // Helper method to check if field is empty
private boolean isFieldEmpty(String text) {
    return text == null || text.trim().isEmpty();
}

// Validation method for Home Address fields
private boolean validateHomeAddressFields() {
    if (isFieldEmpty(fieldHomeName.getText())) {
        JOptionPane.showMessageDialog(this, "Name is required!", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    if (isFieldEmpty(fieldHomeStreet.getText())) {
        JOptionPane.showMessageDialog(this, "Street is required!", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    if (isFieldEmpty(fieldHomeCity.getText())) {
        JOptionPane.showMessageDialog(this, "City is required!", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    if (isFieldEmpty(fieldHomeState.getText())) {
        JOptionPane.showMessageDialog(this, "State is required!", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    if (isFieldEmpty(fieldHomeCountry.getText())) {
        JOptionPane.showMessageDialog(this, "Country is required!", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    return true; // all fields valid
}
    private void btbHomeSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btbHomeSaveActionPerformed
        // TODO add your handling code here:
        // Validate before saving
    if (!validateHomeAddressFields()) {
        return; // stop if validation fails
    }

    // Collect values from text fields
    String name = fieldHomeName.getText();
    String street = fieldHomeStreet.getText();
    String city = fieldHomeCity.getText();
    String state = fieldHomeState.getText();
    String country = fieldHomeCountry.getText();

    // Save into homeAddress object
   person.setName(name);
   
   if (person.getHomeAddress() == null) {
        person.setHomeAddress(new Address());
    }
   
    person.getHomeAddress().setStreet(street);
    person.getHomeAddress().setCity(city);
    person.getHomeAddress().setState(state);
    person.getHomeAddress().setCountry(country);

    // Show success message
    JOptionPane.showMessageDialog(this, "Home Address saved successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

    // Clear all fields after saving
    fieldHomeName.setText("");
    fieldHomeStreet.setText("");
    fieldHomeCity.setText("");
    fieldHomeState.setText("");
    fieldHomeCountry.setText("");


    }//GEN-LAST:event_btbHomeSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btbHomeSave;
    private javax.swing.JTextField fieldHomeCity;
    private javax.swing.JTextField fieldHomeCountry;
    private javax.swing.JTextField fieldHomeName;
    private javax.swing.JTextField fieldHomeState;
    private javax.swing.JTextField fieldHomeStreet;
    private javax.swing.JLabel lblHmCity;
    private javax.swing.JLabel lblHmCountry;
    private javax.swing.JLabel lblHmStrt;
    private javax.swing.JLabel lblHomeAddress;
    private javax.swing.JLabel lblHomeName;
    private javax.swing.JLabel lblHomeState;
    // End of variables declaration//GEN-END:variables
}
