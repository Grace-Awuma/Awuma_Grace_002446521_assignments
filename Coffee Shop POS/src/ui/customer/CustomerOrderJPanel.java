/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.customer;

import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.Business;
import model.Customer;
import model.Product;

/**
 *
 * @author grace
 */
public class CustomerOrderJPanel extends javax.swing.JPanel {
     private JPanel mainWorkArea;
    private Business business;
    private ArrayList<Product> selectedProducts;
    /**
     * Creates new form OrderJPanel
     */
    public CustomerOrderJPanel(JPanel mainWorkArea, Business business) {
        initComponents();
        
        this.mainWorkArea = mainWorkArea;
        this.business = business;
        this.selectedProducts = new ArrayList<>();
        
          populateComboBoxes();
          
          SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy hh:mm:ss a");
            txtOrderDate.setText(dateFormat.format(new java.util.Date()));
            txtOrderDate.setEditable(false); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        WorkArea = new javax.swing.JPanel();
        txtLastName = new javax.swing.JTextField();
        txtContact = new javax.swing.JTextField();
        cmbOrderType = new javax.swing.JComboBox<>();
        lblPaymentMethod = new javax.swing.JLabel();
        cmbPaymentMethod = new javax.swing.JComboBox<>();
        btnBack = new javax.swing.JButton();
        lblCoffee = new javax.swing.JLabel();
        chkboxLatte = new javax.swing.JCheckBox();
        chkboxExpresso = new javax.swing.JCheckBox();
        lblAddCustomerOrder = new javax.swing.JLabel();
        chkboxCappucinno = new javax.swing.JCheckBox();
        lblSandwichandWrap = new javax.swing.JLabel();
        chkboxChickenWrap = new javax.swing.JCheckBox();
        chkboxSandwich = new javax.swing.JCheckBox();
        lblCustomerDetails = new javax.swing.JLabel();
        lblMenu = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        lblContact = new javax.swing.JLabel();
        lblOrderDateandTime = new javax.swing.JLabel();
        lblOrderType = new javax.swing.JLabel();
        lblQuantity = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        btnOrder = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        txtOrderDate = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();

        WorkArea.setBackground(new java.awt.Color(153, 153, 153));
        WorkArea.setPreferredSize(new java.awt.Dimension(600, 900));

        txtContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContactActionPerformed(evt);
            }
        });

        cmbOrderType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbOrderType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOrderTypeActionPerformed(evt);
            }
        });

        lblPaymentMethod.setText("Payment Method");

        cmbPaymentMethod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnBack.setBackground(new java.awt.Color(0, 153, 153));
        btnBack.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblCoffee.setBackground(new java.awt.Color(0, 153, 153));
        lblCoffee.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        lblCoffee.setText("Coffee");

        chkboxLatte.setText("Latte");

        chkboxExpresso.setText("Expresso");
        chkboxExpresso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkboxExpressoActionPerformed(evt);
            }
        });

        lblAddCustomerOrder.setBackground(new java.awt.Color(255, 255, 255));
        lblAddCustomerOrder.setFont(new java.awt.Font("Lucida Calligraphy", 1, 14)); // NOI18N
        lblAddCustomerOrder.setText("Customer Order");

        chkboxCappucinno.setText("Cappuccino");

        lblSandwichandWrap.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        lblSandwichandWrap.setText("Sandwich & Wraps");

        chkboxChickenWrap.setText("Chicken Wrap");

        chkboxSandwich.setText("Croissant Sandwich");
        chkboxSandwich.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkboxSandwichActionPerformed(evt);
            }
        });

        lblCustomerDetails.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        lblCustomerDetails.setText("Details");

        lblMenu.setText("Menu");

        lblLastName.setText("Last Name");

        lblFirstName.setText("First Name");

        lblContact.setText("Contact");

        lblOrderDateandTime.setText("Order Date and Time");

        lblOrderType.setText("Order Type");

        lblQuantity.setText("Number/Quantity");

        btnOrder.setBackground(new java.awt.Color(0, 153, 153));
        btnOrder.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        btnOrder.setText("Order ");
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(0, 153, 153));
        btnReset.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout WorkAreaLayout = new javax.swing.GroupLayout(WorkArea);
        WorkArea.setLayout(WorkAreaLayout);
        WorkAreaLayout.setHorizontalGroup(
            WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WorkAreaLayout.createSequentialGroup()
                .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(WorkAreaLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(lblCustomerDetails))
                    .addGroup(WorkAreaLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(WorkAreaLayout.createSequentialGroup()
                                .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblFirstName)
                                    .addComponent(lblLastName)
                                    .addComponent(lblContact))
                                .addGap(39, 39, 39)
                                .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(WorkAreaLayout.createSequentialGroup()
                                .addComponent(lblOrderType)
                                .addGap(42, 42, 42)
                                .addComponent(cmbOrderType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(WorkAreaLayout.createSequentialGroup()
                                .addComponent(lblPaymentMethod, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cmbPaymentMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(WorkAreaLayout.createSequentialGroup()
                                .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblOrderDateandTime)
                                    .addComponent(lblQuantity))
                                .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(WorkAreaLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(txtOrderDate, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(WorkAreaLayout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(293, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, WorkAreaLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(btnReset)
                .addGap(43, 43, 43))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, WorkAreaLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblAddCustomerOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(194, 194, 194))
            .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, WorkAreaLayout.createSequentialGroup()
                    .addContainerGap(347, Short.MAX_VALUE)
                    .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(chkboxExpresso)
                        .addComponent(chkboxLatte)
                        .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(chkboxChickenWrap)
                            .addComponent(chkboxCappucinno))
                        .addGroup(WorkAreaLayout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addComponent(chkboxSandwich)))
                    .addGap(126, 126, 126))
                .addGroup(WorkAreaLayout.createSequentialGroup()
                    .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(WorkAreaLayout.createSequentialGroup()
                            .addGap(136, 136, 136)
                            .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblSandwichandWrap)
                                .addComponent(lblCoffee)))
                        .addGroup(WorkAreaLayout.createSequentialGroup()
                            .addGap(257, 257, 257)
                            .addComponent(lblMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(228, 228, 228)))
        );
        WorkAreaLayout.setVerticalGroup(
            WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WorkAreaLayout.createSequentialGroup()
                .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(WorkAreaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblAddCustomerOrder))
                    .addGroup(WorkAreaLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btnBack)))
                .addGap(267, 267, 267)
                .addComponent(lblCustomerDetails)
                .addGap(29, 29, 29)
                .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblContact)
                    .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtOrderDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrderDateandTime))
                .addGap(3, 3, 3)
                .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantity)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOrderType)
                    .addComponent(cmbOrderType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPaymentMethod)
                    .addComponent(cmbPaymentMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOrder)
                    .addComponent(btnReset))
                .addContainerGap(280, Short.MAX_VALUE))
            .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(WorkAreaLayout.createSequentialGroup()
                    .addGap(41, 41, 41)
                    .addComponent(lblMenu)
                    .addGap(17, 17, 17)
                    .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCoffee)
                        .addComponent(chkboxLatte))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(chkboxExpresso)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(chkboxCappucinno)
                    .addGap(55, 55, 55)
                    .addGroup(WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSandwichandWrap)
                        .addComponent(chkboxChickenWrap))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(chkboxSandwich)
                    .addContainerGap(653, Short.MAX_VALUE)))
        );

        jScrollPane1.setViewportView(WorkArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContactActionPerformed

    private void cmbOrderTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOrderTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbOrderTypeActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        backAction();
    }//GEN-LAST:event_btnBackActionPerformed

    private void chkboxExpressoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkboxExpressoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkboxExpressoActionPerformed

    private void chkboxSandwichActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkboxSandwichActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkboxSandwichActionPerformed

    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
        // TODO add your handling code here:
        selectedProducts.clear();

        // Your existing checkbox logic
        if (chkboxLatte.isSelected()) {
            Product latte = findProductByName("Latte");
            if (latte != null) selectedProducts.add(latte);
        }

        if (chkboxExpresso.isSelected()) {
            Product espresso = findProductByName("Espresso");
            if (espresso != null) selectedProducts.add(espresso);
        }

        if (chkboxCappucinno.isSelected()) {
            Product cappuccino = findProductByName("Cappuccino");
            if (cappuccino != null) selectedProducts.add(cappuccino);
        }

        if (chkboxChickenWrap.isSelected()) {
            Product chickenWrap = findProductByName("Chicken Wrap");
            if (chickenWrap != null) selectedProducts.add(chickenWrap);
        }

        if (chkboxSandwich.isSelected()) {
            Product croissant = findProductByName("Croissant");
            if (croissant != null) selectedProducts.add(croissant);
        }

        // Call validation method
        if (validateOrder()) {
            createOrder();
        }
        }

        private Product findProductByName(String productName) {
            for (Product product : business.getProductCatalog().getProductList()) {
                if (product.getProductName().equalsIgnoreCase(productName)) {
                    return product;
                }
            }
            return null;
    }//GEN-LAST:event_btnOrderActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtFirstName.setText("");
        txtLastName.setText("");
        txtContact.setText("");
        txtQuantity.setText("");

        // Uncheck all checkboxes
        chkboxLatte.setSelected(false);
        chkboxExpresso.setSelected(false);
        chkboxCappucinno.setSelected(false);
        chkboxChickenWrap.setSelected(false);
        chkboxSandwich.setSelected(false);

        // Reset combo boxes to first item
        cmbOrderType.setSelectedIndex(0);
        cmbPaymentMethod.setSelectedIndex(0);
    }//GEN-LAST:event_btnResetActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel WorkArea;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnOrder;
    private javax.swing.JButton btnReset;
    private javax.swing.JCheckBox chkboxCappucinno;
    private javax.swing.JCheckBox chkboxChickenWrap;
    private javax.swing.JCheckBox chkboxExpresso;
    private javax.swing.JCheckBox chkboxLatte;
    private javax.swing.JCheckBox chkboxSandwich;
    private javax.swing.JComboBox<String> cmbOrderType;
    private javax.swing.JComboBox<String> cmbPaymentMethod;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddCustomerOrder;
    private javax.swing.JLabel lblCoffee;
    private javax.swing.JLabel lblContact;
    private javax.swing.JLabel lblCustomerDetails;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMenu;
    private javax.swing.JLabel lblOrderDateandTime;
    private javax.swing.JLabel lblOrderType;
    private javax.swing.JLabel lblPaymentMethod;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblSandwichandWrap;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtOrderDate;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables

    private void populateComboBoxes() {
cmbOrderType.removeAllItems();
        cmbOrderType.addItem("Dine-in");
        cmbOrderType.addItem("Takeout");
        cmbOrderType.addItem("Pickup");
        
        // Populate Payment Method
        cmbPaymentMethod.removeAllItems();
        cmbPaymentMethod.addItem("Cash");
        cmbPaymentMethod.addItem("Card");
        cmbPaymentMethod.addItem("Mobile");    }

    private void createOrder() {
try {
        // Create customer with auto-ID
        Customer customer = business.getOrderDirectory().addCustomer(-1,
            txtFirstName.getText().trim(),
            txtLastName.getText().trim(),
            txtContact.getText().trim()
        );
        
        int quantity = Integer.parseInt(txtQuantity.getText().trim());
        
        // Create orders for each selected product
        for (Product product : selectedProducts) {
            business.getOrderDirectory().addOrder(-1,
                new java.util.Date(),
                (String) cmbOrderType.getSelectedItem(),
                (String) cmbPaymentMethod.getSelectedItem(),
                "Pending",
                product,
                customer,
                quantity
            );
        }
        
        JOptionPane.showMessageDialog(this, "Order placed successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        btnResetActionPerformed(null);
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error creating order: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
        }

    private boolean validateOrder() {
if (txtFirstName.getText().trim().isEmpty() || 
        txtLastName.getText().trim().isEmpty() || 
        txtContact.getText().trim().isEmpty() || 
        txtQuantity.getText().trim().isEmpty()) {
        
        JOptionPane.showMessageDialog(this, "All fields are required", "Error", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    try {
        int quantity = Integer.parseInt(txtQuantity.getText().trim());
        if (quantity <= 0) {
            JOptionPane.showMessageDialog(this, "Quantity must be positive", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid quantity", "Error", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    if (selectedProducts.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please select at least one product", "Error", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    return true;
    }

    private void backAction() {
        mainWorkArea.remove(this);
        CardLayout layout = (CardLayout)mainWorkArea.getLayout();
        layout.previous(mainWorkArea);    }
}
